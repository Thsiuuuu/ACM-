#include <iostream>

using namespace std;

/*
   考虑总异或值是不是0，
   为0，先手必败，不为0，先手必胜
   因为一次操作以内，为0的必转化为不为0，反之亦然
   首先证明前面一句话
   对每堆用二进制表示
   拿走一些石子，必然会导致某一位从1变0，这一位上所有数字的异或值也会发生改变
   也就是从0,变为1
    所以变为不为0的状态

    再证明后面
    所有石子异或后用二进制表示
    是1的最高位的位置，如果某一对的石子二进制下有这一位置的1
    可以通过移去石子的操作让它变为0
    这个位置往下的所有1的位置，也可以通过操作完成这一目的
    例如 00000~10000之间任何数都可以从10000的状态转化过去
    

*/

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int abs=0;
        for(int i=0;i<n;i++){
            int x;
            cin>>x;
            abs^=x;
        }
        if(abs!=0) cout<<"Yes\n";
        else cout<<"No\n";
    }
    return 0;
}